// Code generated by mockery v1.0.0. DO NOT EDIT.

package client

import (
	context "context"

	agentpb "github.com/percona/pmm/api/agentpb"

	mock "github.com/stretchr/testify/mock"

	status "google.golang.org/genproto/googleapis/rpc/status"
)

// mockRegistry is an autogenerated mock type for the registry type
type mockRegistry struct {
	mock.Mock
}

// SetState provides a mock function with given fields: tunnels
func (_m *mockRegistry) SetState(tunnels map[string]*agentpb.SetStateRequest_Tunnel) map[string]*status.Status {
	ret := _m.Called(tunnels)

	var r0 map[string]*status.Status
	if rf, ok := ret.Get(0).(func(map[string]*agentpb.SetStateRequest_Tunnel) map[string]*status.Status); ok {
		r0 = rf(tunnels)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]*status.Status)
		}
	}

	return r0
}

// Write provides a mock function with given fields: ctx, data
func (_m *mockRegistry) Write(ctx context.Context, data *agentpb.TunnelData) *agentpb.TunnelDataAck {
	ret := _m.Called(ctx, data)

	var r0 *agentpb.TunnelDataAck
	if rf, ok := ret.Get(0).(func(context.Context, *agentpb.TunnelData) *agentpb.TunnelDataAck); ok {
		r0 = rf(ctx, data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*agentpb.TunnelDataAck)
		}
	}

	return r0
}
