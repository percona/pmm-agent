name: CI

on:
  push:
    branches:
      - main
      - release/*
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:

jobs:
  check:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        go:
          - version: 1.15.x
            may-fail: false
          - version: 1.16.x
            may-fail: false
          # TODO enable when 1.15.x is removed
#          - version: tip
#            may-fail: true

    continue-on-error: ${{ matrix.go.may-fail }}

    env:
      GOPATH: ${{ github.workspace }}
      WORKING_DIR: ${{ github.workspace }}/src/github.com/percona/pmm-agent
      GO111MODULE: off #TODO: remove once we move to go modules https://jira.percona.com/browse/PMM-7106

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      - name: Check out code into the working directory under the GOPATH
        uses: percona-platform/checkout@v2
        with:
          fetch-depth: 1
          path: ${{ env.WORKING_DIR }}

      - name: Set up Go release
        if: matrix.go.version != 'tip'
        uses: percona-platform/setup-go@v2
        with:
          go-version: ${{ matrix.go.version }}

      - name: Set up Go tip
        if: matrix.go.version == 'tip'
        run: |
          git clone --depth=1 https://go.googlesource.com/go $HOME/gotip
          cd $HOME/gotip/src
          ./make.bash
          echo "GOROOT=$HOME/gotip" >> $GITHUB_ENV
          echo "$HOME/gotip/bin" >> $GITHUB_PATH

      - name: go env
        run: go env

      - name: Set GO_VERSION environment variable
        run: |
          go version
          echo "GO_VERSION=$(go version)" >> $GITHUB_ENV

      - name: Prepare
        run: make init

      - name: Generate files
        run: make gen

      - name: Check differences
        run: |
          git status
          git diff --exit-code

      - name: Check build
        run: make release

      - name: Run linters
        run: make check

      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make ci-reviewdog

  test:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        go:
          - version: 1.15.x
            may-fail: false
          - version: 1.16.x
            may-fail: true
          # TODO enable when 1.15.x is removed
#          - version: tip
#            may-fail: true
        images:
          - { mysql: 'mysql:5.6', mongo: 'mongo:3.6', postgres: 'postgres:10', pmm_server: 'percona/pmm-server:2.0.0' }
          - { mysql: 'mysql:5.7', mongo: 'mongo:4.0', postgres: 'postgres:11', pmm_server: 'percona/pmm-server:2.0.1' }
          - { mysql: 'mysql:8.0', mongo: 'mongo:4.2', postgres: 'postgres:12', pmm_server: 'percona/pmm-server:2.1.0' }
          - { mysql: 'mysql:8.0', mongo: 'mongo:4.4', postgres: 'postgres:13', pmm_server: 'percona/pmm-server:2.2.0' }

          # Percona + latest PMM Server release
          - { mysql: 'mysql:5.6', mongo: 'percona/percona-server-mongodb:3.6', postgres: 'perconalab/percona-distribution-postgresql:11', pg_libs: 'pg_stat_statements,pg_stat_monitor', pmm_server: 'percona/pmm-server:2' }
          - { mysql: 'mysql:5.7', mongo: 'percona/percona-server-mongodb:4.0', postgres: 'perconalab/percona-distribution-postgresql:12', pg_libs: 'pg_stat_statements,pg_stat_monitor', pmm_server: 'percona/pmm-server:2' }
          - { mysql: 'mysql:8.0', mongo: 'percona/percona-server-mongodb:4.2', postgres: 'perconalab/percona-distribution-postgresql:11', pg_libs: 'pg_stat_statements,pg_stat_monitor', pmm_server: 'percona/pmm-server:2' }

          # MariaDB (only 3 latest GA versions)
          #   + older supported MongoDB versions
          #   + older supported PostgreSQL versions
          #   + dev-latest PMM Server
          # - MYSQL_IMAGE=mariadb:5.5
          # - MYSQL_IMAGE=mariadb:10.0
          # - MYSQL_IMAGE=mariadb:10.1

          - { mysql: 'mariadb:10.2', mongo: 'mongo:3.4',                          postgres: 'postgres:9.4', pmm_server: 'perconalab/pmm-server:dev-latest' }
          - { mysql: 'mariadb:10.3', mongo: 'percona/percona-server-mongodb:3.4', postgres: 'postgres:9.5', pmm_server: 'perconalab/pmm-server:dev-latest' }
          - { mysql: 'mariadb:10.4',                                              postgres: 'postgres:9.6', pmm_server: 'perconalab/pmm-server:dev-latest' }

    continue-on-error: ${{ matrix.go.may-fail }}

    env:
      GOPATH: ${{ github.workspace }}
      WORKING_DIR: ${{ github.workspace }}/src/github.com/percona/pmm-agent
      GO111MODULE: auto
      MYSQL_IMAGE: ${{ matrix.images.mysql }}
      MONGO_IMAGE: ${{ matrix.images.mongo }}
      POSTGRES_IMAGE: ${{ matrix.images.postgres }}
      PMM_SERVER_IMAGE: ${{ matrix.images.pmm_server }}
      PG_PRELOADED_LIBS: ${{ matrix.images.pg_libs }}
      CODECOV_ENV: MYSQL_IMAGE,MONGO_IMAGE,POSTGRES_IMAGE,PMM_SERVER_IMAGE

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
    - name: Check out code into the Go module directory
      uses: percona-platform/checkout@v2
      with:
        fetch-depth: 1
        path: ${{ env.WORKING_DIR }}

    - name: Set up Go release
      if: matrix.go.version != 'tip'
      uses: percona-platform/setup-go@v2
      with:
        go-version: ${{ matrix.go.version }}

    - name: Set up Go tip
      if: matrix.go.version == 'tip'
      run: |
        git clone --depth=1 https://go.googlesource.com/go $HOME/gotip
        cd $HOME/gotip/src
        ./make.bash
        echo "GOROOT=$HOME/gotip" >> $GITHUB_ENV
        echo "$HOME/gotip/bin" >> $GITHUB_PATH

    - name: go env
      run: go env
    
    - name: Set GO_VERSION environment variable
      run: |
        go version
        echo "GO_VERSION=$(go version)" >> $GITHUB_ENV

    - name: Docker-compose
      env:
        ENV_UP_FLAGS: "--detach"
      run: make env-up
      
    - name: Prepare
      run: make install

    - name: Test race
      run: make test-race

    - name: Test cover
      run: make test-cover

    - name: Test crosscover
      run: make test-crosscover

    - name: Upload coverage results
      uses: percona-platform/codecov-action@v1
      with:
        file: cover.out
        flags: cover
        env_vars: GO_VERSION,MYSQL_IMAGE,MONGO_IMAGE,POSTGRES_IMAGE,PMM_SERVER_IMAGE
        fail_ci_if_error: false

    - name: Upload coverage results
      uses: percona-platform/codecov-action@v1
      with:
        file: crosscover.out
        flags: crosscover
        env_vars: GO_VERSION,MYSQL_IMAGE,MONGO_IMAGE,POSTGRES_IMAGE,PMM_SERVER_IMAGE
        fail_ci_if_error: false
