name: CI

on:
  push:
    branches:
      - main
      - release/*
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:

jobs:

  test:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        go:
          - version: 1.15.x
            may-fail: false
          - version: tip
            may-fail: true
        images:
          - { mysql: 'mysql:5.6', mongo: 'mongo:3.6', postgres: 'postgres:10', pmm_server: 'percona/pmm-server:2.0.0' }
          - { mysql: 'mysql:5.7', mongo: 'mongo:4.0', postgres: 'postgres:11', pmm_server: 'percona/pmm-server:2.0.1' }
#          - MYSQL_IMAGE=mysql:5.7 MONGO_IMAGE=mongo:4.0 POSTGRES_IMAGE=postgres:11 PMM_SERVER_IMAGE=percona/pmm-server:2.0.1
#          - MYSQL_IMAGE=mysql:8.0 MONGO_IMAGE=mongo:4.2 POSTGRES_IMAGE=postgres:12 PMM_SERVER_IMAGE=percona/pmm-server:2.1.0
#          - MYSQL_IMAGE=mysql:8.0 MONGO_IMAGE=mongo:4.4 POSTGRES_IMAGE=postgres:13 PMM_SERVER_IMAGE=percona/pmm-server:2.2.0
#
#          # Percona + latest PMM Server release
#          - MYSQL_IMAGE=percona:5.6 MONGO_IMAGE=percona/percona-server-mongodb:3.6 POSTGRES_IMAGE=perconalab/percona-distribution-postgresql:11 PG_PRELOADED_LIBS=pg_stat_statements,pg_stat_monitor  PMM_SERVER_IMAGE=percona/pmm-server:2
#          - MYSQL_IMAGE=percona:5.7 MONGO_IMAGE=percona/percona-server-mongodb:4.0 POSTGRES_IMAGE=perconalab/percona-distribution-postgresql:12 PG_PRELOADED_LIBS=pg_stat_statements,pg_stat_monitor  PMM_SERVER_IMAGE=percona/pmm-server:2
#          - MYSQL_IMAGE=percona:8.0 MONGO_IMAGE=percona/percona-server-mongodb:4.2 PMM_SERVER_IMAGE=percona/pmm-server:2
#
#          # MariaDB (only 3 latest GA versions)
#          #   + older supported MongoDB versions
#          #   + older supported PostgreSQL versions
#          #   + dev-latest PMM Server
#          # - MYSQL_IMAGE=mariadb:5.5
#          # - MYSQL_IMAGE=mariadb:10.0
#          # - MYSQL_IMAGE=mariadb:10.1
#          - MYSQL_IMAGE=mariadb:10.2 MONGO_IMAGE=mongo:3.4                          POSTGRES_IMAGE=postgres:9.4 PMM_SERVER_IMAGE=perconalab/pmm-server:dev-latest
#          - MYSQL_IMAGE=mariadb:10.3 MONGO_IMAGE=percona/percona-server-mongodb:3.4 POSTGRES_IMAGE=postgres:9.5 PMM_SERVER_IMAGE=perconalab/pmm-server:dev-latest
#          - MYSQL_IMAGE=mariadb:10.4                                                POSTGRES_IMAGE=postgres:9.6 PMM_SERVER_IMAGE=perconalab/pmm-server:dev-latest
    continue-on-error: ${{ matrix.go.may-fail }}

    env:
      GOPATH: ${{ github.workspace }}
      WORKING_DIR: ${{ github.workspace }}/src/github.com/percona/pmm-agent
      MYSQL_IMAGE: ${{ matrix.images.mysql }}
      MONGO_IMAGE: ${{ matrix.images.mongo }}
      POSTGRES_IMAGE: ${{ matrix.images.postgres }}
      PMM_SERVER_IMAGE: ${{ matrix.images.pmm_server }}
      PG_PRELOADED_LIBS: ${{ matrix.images.pg_libs }}

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
    - name: Check out code into the Go module directory
      uses: percona-platform/checkout@v2
      with:
        fetch-depth: 1
        path: ${{ env.WORKING_DIR }}

    - name: Set up Go release
      if: matrix.go.version != 'tip'
      uses: percona-platform/setup-go@v2
      with:
        go-version: ${{ matrix.go.version }}

    - name: Set up Go tip
      if: matrix.go.version == 'tip'
      run: |
        git clone --depth=1 https://go.googlesource.com/go $HOME/gotip
        cd $HOME/gotip/src
        ./make.bash
        echo "GOROOT=$HOME/gotip" >> $GITHUB_ENV
        echo "$HOME/gotip/bin" >> $GITHUB_PATH
    
    - name: Set GO_VERSION environment variable
      run: |
        go version
        echo "GO_VERSION=$(go version)" >> $GITHUB_ENV

    - name: Docker-compose
      run: env ENV_UP_FLAGS=--detach make env-up
      
    - name: Prepare
      run: make install

    - name: Test race
      run: make test-race

    - name: Test cover
      run: make test-cover

    - name: Test race
      run: make test-crosscover

