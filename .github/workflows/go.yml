name: CI

on:
  schedule:
    # run every Sunday to re-populate caches after they are cleaned on Saturday
    - cron: "0 12 * * 0"
  push:
    branches:
      - main
      - release/*
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:

jobs:

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version:
          - 1.15.x
        may-fail: [false]
        
#        include:
#          - go-version: tip
#            may-fail: true
    continue-on-error: ${{ matrix.may-fail }}

    env:
      GOPATH: ${{ github.workspace }}
      GOBIN: ${{ github.workspace }}/bin
      WORKING_DIR: ${{ github.workspace }}/src/percona/pmm-agent

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go release
      if: matrix.go-version != 'tip'
      env:
        # to avoid error due to `go version` accepting -v flag with an argument since 1.15
        GOFLAGS: ""
      uses: percona-platform/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Set up Go tip
      if: matrix.go-version == 'tip'
      env:
        # to avoid error due to `go version` accepting -v flag with an argument since 1.15
        GOFLAGS: ""
      run: |
        git clone --depth=1 https://go.googlesource.com/go $HOME/gotip
        cd $HOME/gotip/src
        ./make.bash
        echo "GOROOT=$HOME/gotip" >> $GITHUB_ENV
        echo "$HOME/gotip/bin" >> $GITHUB_PATH
    
    - name: Set GO_VERSION environment variable
      env:
        # to avoid error due to `go version` accepting -v flag with an argument since 1.15
        GOFLAGS: ""
      run: |
        go version
        echo "GO_VERSION=$(go version)" >> $GITHUB_ENV

    - name: Check out code into the Go module directory
      uses: percona-platform/checkout@v2
      with:
        fetch-depth: 1
        path: ${{ env.WORKING_DIR }}

    - name: Docker-compose
      run: env ENV_UP_FLAGS=--detach make env-up
      
    - name: Prepare
      run: make install

    - name: Test race
      run: make test-race

    - name: Test cover
      run: make test-cover

    - name: Test race
      run: make test-crosscover

