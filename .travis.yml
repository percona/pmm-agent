dist: xenial
language: go

services:
  - docker

go:
  - 1.12.x
  # - TODO master

matrix:
  allow_failures:
    - go: master

cache:
  directories:
    - /home/travis/.cache/go-build
    # - /home/travis/gopath/pkg

before_cache:
  - go clean -testcache
  # - go clean -cache

env:
  fast_finish: true

  global:
    - CODECOV_ENV=MYSQL_IMAGE,MONGO_IMAGE,POSTGRES_IMAGE

  matrix:
    # upstreams
    - MYSQL_IMAGE=mysql:5.6 MONGO_IMAGE=mongo:3.4 POSTGRES_IMAGE=postgres:10
    - MYSQL_IMAGE=mysql:5.7 MONGO_IMAGE=mongo:3.6 POSTGRES_IMAGE=postgres:11
    - MYSQL_IMAGE=mysql:8.0 MONGO_IMAGE=mongo:4.0 POSTGRES_IMAGE=postgres:12

    # Percona
    - MYSQL_IMAGE=percona:5.6 MONGO_IMAGE=percona/percona-server-mongodb:3.4
    - MYSQL_IMAGE=percona:5.7 MONGO_IMAGE=percona/percona-server-mongodb:3.6
    - MYSQL_IMAGE=percona:8.0 MONGO_IMAGE=percona/percona-server-mongodb:4.0

    # MariaDB (only 3 latest GA versions) + older supported PostgreSQL versions
    # - MYSQL_IMAGE=mariadb:5.5
    # - MYSQL_IMAGE=mariadb:10.0
    # - MYSQL_IMAGE=mariadb:10.1
    - MYSQL_IMAGE=mariadb:10.2 POSTGRES_IMAGE=postgres:9.4
    - MYSQL_IMAGE=mariadb:10.3 POSTGRES_IMAGE=postgres:9.5
    - MYSQL_IMAGE=mariadb:10.4 POSTGRES_IMAGE=postgres:9.6

before_install:
  - touch testdata/slowlogs/slow.log
  - chmod 666 testdata/slowlogs/slow.log
  - docker-compose up -d

install:
  # ensure that vendor/ is in sync with code and Gopkg.toml/lock
  - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
  - dep check

before_script:
  # ensure that generated files are not changed
  - make init
  - make gen
  - make format
  - git status
  - git diff --exit-code

script:
  # for main_test.go
  - make install

  - make test-cover
  - make test-crosscover
  - make test-race

  - make check

after_success:
  - curl https://codecov.io/bash > codecov
  - chmod +x codecov
  - ./codecov -f cover.out -F cover -X fix
  - ./codecov -f crosscover.out -F crosscover -X fix

notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: ZQUGHsOF2Wy0ylQaXFJam1DGJrf/Cg0m7leqPUsbpFkkWo/yRFxCFXvQegAIL4dzeNhHSI4SuIopsZ3OCw/UpZFlWKJ4qXWgvEYMtUKng8YkX+m4g31rO94o/G6Npo91eAN2MIJ/KB0B+Xs1iQlhCDllDMsxetjK2d1MuZlo3/Qu+qdoOiUJyRQtPbrGbJkufN1d3WxT/gIXIUDpgwI4qNZEsXXLe9jqtOsHB8ZLkBYGu/uVtr7s6aPi2p3M2n9giNK8MUEgG2fM/ySNnQxP3LB/YDckjq5iZkbCS3jyoxnjOZKTQNLh7t1D5QTeieRsQEWm5Nuj8qyNFt9iy4lvZG+3o+9JMl9ZvJe2t4O8RtgScPBmPoY+1I0dlGiJmFiIqfAxj0lo1iyIpPx8ypxh0YTh0r2b7x/Qut+Bwt5gsc7qDAYlS1wZLVGER7F/qF/mqklfGjbZbgU8gyqrj1boYstpDtRIa/ahrOWt52b3CnINLXituuAikw7mn37yVk6CFZO2Vlee/yM3Xj6DElz/VcYDGHRgPzV4Cmh14XR4GoaPIO4jRW7J6uVFmH9Szhs0fyHJpsI2VX2mmO1ws9HtjHbTcrj9ocR03dgUw4UNmbGHO7WRG0pIcH5qy7X40dWF3fHqoMFJLfmeoH1CYplLGTx4yhdV0DuQpOiL53Y+Gi0=
