// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: inventory/nodes.proto

package inventory

import fmt "fmt"
import github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/golang/protobuf/proto"
import math "math"
import _ "github.com/mwitkow/go-proto-validators"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *GenericNode) Validate() error {
	return nil
}
func (this *RemoteNode) Validate() error {
	return nil
}
func (this *AmazonRDSRemoteNode) Validate() error {
	return nil
}
func (this *ListNodesRequest) Validate() error {
	return nil
}
func (this *ListNodesResponse) Validate() error {
	for _, item := range this.Generic {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Generic", err)
			}
		}
	}
	for _, item := range this.Remote {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Remote", err)
			}
		}
	}
	for _, item := range this.AmazonRdsRemote {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AmazonRdsRemote", err)
			}
		}
	}
	return nil
}
func (this *GetNodeRequest) Validate() error {
	if this.Id == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must not be an empty string`, this.Id))
	}
	return nil
}
func (this *GetNodeResponse) Validate() error {
	if oneOfNester, ok := this.GetNode().(*GetNodeResponse_Generic); ok {
		if oneOfNester.Generic != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Generic); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Generic", err)
			}
		}
	}
	if oneOfNester, ok := this.GetNode().(*GetNodeResponse_Remote); ok {
		if oneOfNester.Remote != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Remote); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Remote", err)
			}
		}
	}
	if oneOfNester, ok := this.GetNode().(*GetNodeResponse_AmazonRdsRemote); ok {
		if oneOfNester.AmazonRdsRemote != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.AmazonRdsRemote); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AmazonRdsRemote", err)
			}
		}
	}
	return nil
}
func (this *AddGenericNodeRequest) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	return nil
}
func (this *AddGenericNodeResponse) Validate() error {
	if this.Generic != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Generic); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Generic", err)
		}
	}
	return nil
}
func (this *AddRemoteNodeRequest) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	return nil
}
func (this *AddRemoteNodeResponse) Validate() error {
	if this.Remote != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Remote); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Remote", err)
		}
	}
	return nil
}
func (this *AddAmazonRDSRemoteNodeRequest) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	if this.Hostname == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Hostname", fmt.Errorf(`value '%v' must not be an empty string`, this.Hostname))
	}
	if this.Region == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Region", fmt.Errorf(`value '%v' must not be an empty string`, this.Region))
	}
	return nil
}
func (this *AddAmazonRDSRemoteNodeResponse) Validate() error {
	if this.AmazonRdsRemote != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AmazonRdsRemote); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AmazonRdsRemote", err)
		}
	}
	return nil
}
func (this *ChangeGenericNodeRequest) Validate() error {
	if this.Id == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must not be an empty string`, this.Id))
	}
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	return nil
}
func (this *ChangeGenericNodeResponse) Validate() error {
	if this.Generic != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Generic); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Generic", err)
		}
	}
	return nil
}
func (this *ChangeRemoteNodeRequest) Validate() error {
	if this.Id == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must not be an empty string`, this.Id))
	}
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	return nil
}
func (this *ChangeRemoteNodeResponse) Validate() error {
	if this.Remote != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Remote); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Remote", err)
		}
	}
	return nil
}
func (this *ChangeAmazonRDSRemoteNodeRequest) Validate() error {
	if this.Id == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must not be an empty string`, this.Id))
	}
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	return nil
}
func (this *ChangeAmazonRDSRemoteNodeResponse) Validate() error {
	if this.AmazonRdsRemote != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AmazonRdsRemote); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AmazonRdsRemote", err)
		}
	}
	return nil
}
func (this *RemoveNodeRequest) Validate() error {
	if this.Id == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must not be an empty string`, this.Id))
	}
	return nil
}
func (this *RemoveNodeResponse) Validate() error {
	return nil
}
