// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inventory/nodes.proto

package inventory

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/mwitkow/go-proto-validators"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// GenericNode represents Node without more specialized type.
type GenericNode struct {
	// Unique Node identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique user-defined Node name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Hostname. Is not unique. May be empty.
	Hostname             string   `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenericNode) Reset()         { *m = GenericNode{} }
func (m *GenericNode) String() string { return proto.CompactTextString(m) }
func (*GenericNode) ProtoMessage()    {}
func (*GenericNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{0}
}
func (m *GenericNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericNode.Unmarshal(m, b)
}
func (m *GenericNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericNode.Marshal(b, m, deterministic)
}
func (dst *GenericNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericNode.Merge(dst, src)
}
func (m *GenericNode) XXX_Size() int {
	return xxx_messageInfo_GenericNode.Size(m)
}
func (m *GenericNode) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericNode.DiscardUnknown(m)
}

var xxx_messageInfo_GenericNode proto.InternalMessageInfo

func (m *GenericNode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GenericNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GenericNode) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

// RemoteNode represents a generic remote Node.
// Agents can't be run on remote Nodes.
type RemoteNode struct {
	// Unique Node identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique user-defined Node name.
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteNode) Reset()         { *m = RemoteNode{} }
func (m *RemoteNode) String() string { return proto.CompactTextString(m) }
func (*RemoteNode) ProtoMessage()    {}
func (*RemoteNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{1}
}
func (m *RemoteNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteNode.Unmarshal(m, b)
}
func (m *RemoteNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteNode.Marshal(b, m, deterministic)
}
func (dst *RemoteNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteNode.Merge(dst, src)
}
func (m *RemoteNode) XXX_Size() int {
	return xxx_messageInfo_RemoteNode.Size(m)
}
func (m *RemoteNode) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteNode.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteNode proto.InternalMessageInfo

func (m *RemoteNode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RemoteNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// AmazonRDSRemoteNode represents Amazon (AWS) RDS remote Node.
type AmazonRDSRemoteNode struct {
	// Unique Node identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique user-defined Node name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Hostname. Unique in combination with region.
	Hostname string `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// AWS region. Unique in combination with hostname.
	Region               string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AmazonRDSRemoteNode) Reset()         { *m = AmazonRDSRemoteNode{} }
func (m *AmazonRDSRemoteNode) String() string { return proto.CompactTextString(m) }
func (*AmazonRDSRemoteNode) ProtoMessage()    {}
func (*AmazonRDSRemoteNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{2}
}
func (m *AmazonRDSRemoteNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AmazonRDSRemoteNode.Unmarshal(m, b)
}
func (m *AmazonRDSRemoteNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AmazonRDSRemoteNode.Marshal(b, m, deterministic)
}
func (dst *AmazonRDSRemoteNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AmazonRDSRemoteNode.Merge(dst, src)
}
func (m *AmazonRDSRemoteNode) XXX_Size() int {
	return xxx_messageInfo_AmazonRDSRemoteNode.Size(m)
}
func (m *AmazonRDSRemoteNode) XXX_DiscardUnknown() {
	xxx_messageInfo_AmazonRDSRemoteNode.DiscardUnknown(m)
}

var xxx_messageInfo_AmazonRDSRemoteNode proto.InternalMessageInfo

func (m *AmazonRDSRemoteNode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AmazonRDSRemoteNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AmazonRDSRemoteNode) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *AmazonRDSRemoteNode) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type ListNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodesRequest) Reset()         { *m = ListNodesRequest{} }
func (m *ListNodesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodesRequest) ProtoMessage()    {}
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{3}
}
func (m *ListNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesRequest.Unmarshal(m, b)
}
func (m *ListNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesRequest.Marshal(b, m, deterministic)
}
func (dst *ListNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesRequest.Merge(dst, src)
}
func (m *ListNodesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodesRequest.Size(m)
}
func (m *ListNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesRequest proto.InternalMessageInfo

type ListNodesResponse struct {
	Generic              []*GenericNode         `protobuf:"bytes,1,rep,name=generic,proto3" json:"generic,omitempty"`
	Remote               []*RemoteNode          `protobuf:"bytes,4,rep,name=remote,proto3" json:"remote,omitempty"`
	AmazonRdsRemote      []*AmazonRDSRemoteNode `protobuf:"bytes,5,rep,name=amazon_rds_remote,json=amazonRdsRemote,proto3" json:"amazon_rds_remote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListNodesResponse) Reset()         { *m = ListNodesResponse{} }
func (m *ListNodesResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodesResponse) ProtoMessage()    {}
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{4}
}
func (m *ListNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesResponse.Unmarshal(m, b)
}
func (m *ListNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesResponse.Marshal(b, m, deterministic)
}
func (dst *ListNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesResponse.Merge(dst, src)
}
func (m *ListNodesResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodesResponse.Size(m)
}
func (m *ListNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesResponse proto.InternalMessageInfo

func (m *ListNodesResponse) GetGeneric() []*GenericNode {
	if m != nil {
		return m.Generic
	}
	return nil
}

func (m *ListNodesResponse) GetRemote() []*RemoteNode {
	if m != nil {
		return m.Remote
	}
	return nil
}

func (m *ListNodesResponse) GetAmazonRdsRemote() []*AmazonRDSRemoteNode {
	if m != nil {
		return m.AmazonRdsRemote
	}
	return nil
}

type GetNodeRequest struct {
	// Unique Node identifier.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeRequest) Reset()         { *m = GetNodeRequest{} }
func (m *GetNodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeRequest) ProtoMessage()    {}
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{5}
}
func (m *GetNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRequest.Unmarshal(m, b)
}
func (m *GetNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRequest.Marshal(b, m, deterministic)
}
func (dst *GetNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRequest.Merge(dst, src)
}
func (m *GetNodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeRequest.Size(m)
}
func (m *GetNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRequest proto.InternalMessageInfo

func (m *GetNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetNodeResponse struct {
	// Types that are valid to be assigned to Node:
	//	*GetNodeResponse_Generic
	//	*GetNodeResponse_Remote
	//	*GetNodeResponse_AmazonRdsRemote
	Node                 isGetNodeResponse_Node `protobuf_oneof:"node"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetNodeResponse) Reset()         { *m = GetNodeResponse{} }
func (m *GetNodeResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeResponse) ProtoMessage()    {}
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{6}
}
func (m *GetNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeResponse.Unmarshal(m, b)
}
func (m *GetNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeResponse.Marshal(b, m, deterministic)
}
func (dst *GetNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeResponse.Merge(dst, src)
}
func (m *GetNodeResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeResponse.Size(m)
}
func (m *GetNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeResponse proto.InternalMessageInfo

type isGetNodeResponse_Node interface {
	isGetNodeResponse_Node()
}

type GetNodeResponse_Generic struct {
	Generic *GenericNode `protobuf:"bytes,1,opt,name=generic,proto3,oneof"`
}

type GetNodeResponse_Remote struct {
	Remote *RemoteNode `protobuf:"bytes,4,opt,name=remote,proto3,oneof"`
}

type GetNodeResponse_AmazonRdsRemote struct {
	AmazonRdsRemote *AmazonRDSRemoteNode `protobuf:"bytes,5,opt,name=amazon_rds_remote,json=amazonRdsRemote,proto3,oneof"`
}

func (*GetNodeResponse_Generic) isGetNodeResponse_Node() {}

func (*GetNodeResponse_Remote) isGetNodeResponse_Node() {}

func (*GetNodeResponse_AmazonRdsRemote) isGetNodeResponse_Node() {}

func (m *GetNodeResponse) GetNode() isGetNodeResponse_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *GetNodeResponse) GetGeneric() *GenericNode {
	if x, ok := m.GetNode().(*GetNodeResponse_Generic); ok {
		return x.Generic
	}
	return nil
}

func (m *GetNodeResponse) GetRemote() *RemoteNode {
	if x, ok := m.GetNode().(*GetNodeResponse_Remote); ok {
		return x.Remote
	}
	return nil
}

func (m *GetNodeResponse) GetAmazonRdsRemote() *AmazonRDSRemoteNode {
	if x, ok := m.GetNode().(*GetNodeResponse_AmazonRdsRemote); ok {
		return x.AmazonRdsRemote
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetNodeResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetNodeResponse_OneofMarshaler, _GetNodeResponse_OneofUnmarshaler, _GetNodeResponse_OneofSizer, []interface{}{
		(*GetNodeResponse_Generic)(nil),
		(*GetNodeResponse_Remote)(nil),
		(*GetNodeResponse_AmazonRdsRemote)(nil),
	}
}

func _GetNodeResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetNodeResponse)
	// node
	switch x := m.Node.(type) {
	case *GetNodeResponse_Generic:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Generic); err != nil {
			return err
		}
	case *GetNodeResponse_Remote:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Remote); err != nil {
			return err
		}
	case *GetNodeResponse_AmazonRdsRemote:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AmazonRdsRemote); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetNodeResponse.Node has unexpected type %T", x)
	}
	return nil
}

func _GetNodeResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetNodeResponse)
	switch tag {
	case 1: // node.generic
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GenericNode)
		err := b.DecodeMessage(msg)
		m.Node = &GetNodeResponse_Generic{msg}
		return true, err
	case 4: // node.remote
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoteNode)
		err := b.DecodeMessage(msg)
		m.Node = &GetNodeResponse_Remote{msg}
		return true, err
	case 5: // node.amazon_rds_remote
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AmazonRDSRemoteNode)
		err := b.DecodeMessage(msg)
		m.Node = &GetNodeResponse_AmazonRdsRemote{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GetNodeResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetNodeResponse)
	// node
	switch x := m.Node.(type) {
	case *GetNodeResponse_Generic:
		s := proto.Size(x.Generic)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetNodeResponse_Remote:
		s := proto.Size(x.Remote)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetNodeResponse_AmazonRdsRemote:
		s := proto.Size(x.AmazonRdsRemote)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AddGenericNodeRequest struct {
	// Unique Node identifier. Will be generated if empty.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique user-defined Node name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Hostname. Is not unique. May be empty.
	Hostname             string   `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddGenericNodeRequest) Reset()         { *m = AddGenericNodeRequest{} }
func (m *AddGenericNodeRequest) String() string { return proto.CompactTextString(m) }
func (*AddGenericNodeRequest) ProtoMessage()    {}
func (*AddGenericNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{7}
}
func (m *AddGenericNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddGenericNodeRequest.Unmarshal(m, b)
}
func (m *AddGenericNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddGenericNodeRequest.Marshal(b, m, deterministic)
}
func (dst *AddGenericNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddGenericNodeRequest.Merge(dst, src)
}
func (m *AddGenericNodeRequest) XXX_Size() int {
	return xxx_messageInfo_AddGenericNodeRequest.Size(m)
}
func (m *AddGenericNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddGenericNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddGenericNodeRequest proto.InternalMessageInfo

func (m *AddGenericNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddGenericNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddGenericNodeRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type AddGenericNodeResponse struct {
	Generic              *GenericNode `protobuf:"bytes,1,opt,name=generic,proto3" json:"generic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddGenericNodeResponse) Reset()         { *m = AddGenericNodeResponse{} }
func (m *AddGenericNodeResponse) String() string { return proto.CompactTextString(m) }
func (*AddGenericNodeResponse) ProtoMessage()    {}
func (*AddGenericNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{8}
}
func (m *AddGenericNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddGenericNodeResponse.Unmarshal(m, b)
}
func (m *AddGenericNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddGenericNodeResponse.Marshal(b, m, deterministic)
}
func (dst *AddGenericNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddGenericNodeResponse.Merge(dst, src)
}
func (m *AddGenericNodeResponse) XXX_Size() int {
	return xxx_messageInfo_AddGenericNodeResponse.Size(m)
}
func (m *AddGenericNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddGenericNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddGenericNodeResponse proto.InternalMessageInfo

func (m *AddGenericNodeResponse) GetGeneric() *GenericNode {
	if m != nil {
		return m.Generic
	}
	return nil
}

type AddRemoteNodeRequest struct {
	// Unique Node identifier. Will be generated if empty.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique user-defined Node name.
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRemoteNodeRequest) Reset()         { *m = AddRemoteNodeRequest{} }
func (m *AddRemoteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*AddRemoteNodeRequest) ProtoMessage()    {}
func (*AddRemoteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{9}
}
func (m *AddRemoteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRemoteNodeRequest.Unmarshal(m, b)
}
func (m *AddRemoteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRemoteNodeRequest.Marshal(b, m, deterministic)
}
func (dst *AddRemoteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRemoteNodeRequest.Merge(dst, src)
}
func (m *AddRemoteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_AddRemoteNodeRequest.Size(m)
}
func (m *AddRemoteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRemoteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRemoteNodeRequest proto.InternalMessageInfo

func (m *AddRemoteNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddRemoteNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AddRemoteNodeResponse struct {
	Remote               *RemoteNode `protobuf:"bytes,1,opt,name=remote,proto3" json:"remote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AddRemoteNodeResponse) Reset()         { *m = AddRemoteNodeResponse{} }
func (m *AddRemoteNodeResponse) String() string { return proto.CompactTextString(m) }
func (*AddRemoteNodeResponse) ProtoMessage()    {}
func (*AddRemoteNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{10}
}
func (m *AddRemoteNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRemoteNodeResponse.Unmarshal(m, b)
}
func (m *AddRemoteNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRemoteNodeResponse.Marshal(b, m, deterministic)
}
func (dst *AddRemoteNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRemoteNodeResponse.Merge(dst, src)
}
func (m *AddRemoteNodeResponse) XXX_Size() int {
	return xxx_messageInfo_AddRemoteNodeResponse.Size(m)
}
func (m *AddRemoteNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRemoteNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddRemoteNodeResponse proto.InternalMessageInfo

func (m *AddRemoteNodeResponse) GetRemote() *RemoteNode {
	if m != nil {
		return m.Remote
	}
	return nil
}

type AddAmazonRDSRemoteNodeRequest struct {
	// Unique Node identifier. Will be generated if empty.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique user-defined Node name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Hostname. Unique in combination with region.
	Hostname string `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// AWS region. Unique in combination with hostname.
	Region               string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAmazonRDSRemoteNodeRequest) Reset()         { *m = AddAmazonRDSRemoteNodeRequest{} }
func (m *AddAmazonRDSRemoteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*AddAmazonRDSRemoteNodeRequest) ProtoMessage()    {}
func (*AddAmazonRDSRemoteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{11}
}
func (m *AddAmazonRDSRemoteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAmazonRDSRemoteNodeRequest.Unmarshal(m, b)
}
func (m *AddAmazonRDSRemoteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAmazonRDSRemoteNodeRequest.Marshal(b, m, deterministic)
}
func (dst *AddAmazonRDSRemoteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAmazonRDSRemoteNodeRequest.Merge(dst, src)
}
func (m *AddAmazonRDSRemoteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_AddAmazonRDSRemoteNodeRequest.Size(m)
}
func (m *AddAmazonRDSRemoteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAmazonRDSRemoteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddAmazonRDSRemoteNodeRequest proto.InternalMessageInfo

func (m *AddAmazonRDSRemoteNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddAmazonRDSRemoteNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddAmazonRDSRemoteNodeRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *AddAmazonRDSRemoteNodeRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type AddAmazonRDSRemoteNodeResponse struct {
	AmazonRdsRemote      *AmazonRDSRemoteNode `protobuf:"bytes,1,opt,name=amazon_rds_remote,json=amazonRdsRemote,proto3" json:"amazon_rds_remote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AddAmazonRDSRemoteNodeResponse) Reset()         { *m = AddAmazonRDSRemoteNodeResponse{} }
func (m *AddAmazonRDSRemoteNodeResponse) String() string { return proto.CompactTextString(m) }
func (*AddAmazonRDSRemoteNodeResponse) ProtoMessage()    {}
func (*AddAmazonRDSRemoteNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{12}
}
func (m *AddAmazonRDSRemoteNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAmazonRDSRemoteNodeResponse.Unmarshal(m, b)
}
func (m *AddAmazonRDSRemoteNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAmazonRDSRemoteNodeResponse.Marshal(b, m, deterministic)
}
func (dst *AddAmazonRDSRemoteNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAmazonRDSRemoteNodeResponse.Merge(dst, src)
}
func (m *AddAmazonRDSRemoteNodeResponse) XXX_Size() int {
	return xxx_messageInfo_AddAmazonRDSRemoteNodeResponse.Size(m)
}
func (m *AddAmazonRDSRemoteNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAmazonRDSRemoteNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddAmazonRDSRemoteNodeResponse proto.InternalMessageInfo

func (m *AddAmazonRDSRemoteNodeResponse) GetAmazonRdsRemote() *AmazonRDSRemoteNode {
	if m != nil {
		return m.AmazonRdsRemote
	}
	return nil
}

type ChangeGenericNodeRequest struct {
	// Unique Node identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique user-defined Node name.
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeGenericNodeRequest) Reset()         { *m = ChangeGenericNodeRequest{} }
func (m *ChangeGenericNodeRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeGenericNodeRequest) ProtoMessage()    {}
func (*ChangeGenericNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{13}
}
func (m *ChangeGenericNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeGenericNodeRequest.Unmarshal(m, b)
}
func (m *ChangeGenericNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeGenericNodeRequest.Marshal(b, m, deterministic)
}
func (dst *ChangeGenericNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeGenericNodeRequest.Merge(dst, src)
}
func (m *ChangeGenericNodeRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeGenericNodeRequest.Size(m)
}
func (m *ChangeGenericNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeGenericNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeGenericNodeRequest proto.InternalMessageInfo

func (m *ChangeGenericNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ChangeGenericNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ChangeGenericNodeResponse struct {
	Generic              *GenericNode `protobuf:"bytes,1,opt,name=generic,proto3" json:"generic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ChangeGenericNodeResponse) Reset()         { *m = ChangeGenericNodeResponse{} }
func (m *ChangeGenericNodeResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeGenericNodeResponse) ProtoMessage()    {}
func (*ChangeGenericNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{14}
}
func (m *ChangeGenericNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeGenericNodeResponse.Unmarshal(m, b)
}
func (m *ChangeGenericNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeGenericNodeResponse.Marshal(b, m, deterministic)
}
func (dst *ChangeGenericNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeGenericNodeResponse.Merge(dst, src)
}
func (m *ChangeGenericNodeResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeGenericNodeResponse.Size(m)
}
func (m *ChangeGenericNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeGenericNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeGenericNodeResponse proto.InternalMessageInfo

func (m *ChangeGenericNodeResponse) GetGeneric() *GenericNode {
	if m != nil {
		return m.Generic
	}
	return nil
}

type ChangeRemoteNodeRequest struct {
	// Unique Node identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique user-defined Node name.
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeRemoteNodeRequest) Reset()         { *m = ChangeRemoteNodeRequest{} }
func (m *ChangeRemoteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeRemoteNodeRequest) ProtoMessage()    {}
func (*ChangeRemoteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{15}
}
func (m *ChangeRemoteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeRemoteNodeRequest.Unmarshal(m, b)
}
func (m *ChangeRemoteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeRemoteNodeRequest.Marshal(b, m, deterministic)
}
func (dst *ChangeRemoteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeRemoteNodeRequest.Merge(dst, src)
}
func (m *ChangeRemoteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeRemoteNodeRequest.Size(m)
}
func (m *ChangeRemoteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeRemoteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeRemoteNodeRequest proto.InternalMessageInfo

func (m *ChangeRemoteNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ChangeRemoteNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ChangeRemoteNodeResponse struct {
	Remote               *RemoteNode `protobuf:"bytes,1,opt,name=remote,proto3" json:"remote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ChangeRemoteNodeResponse) Reset()         { *m = ChangeRemoteNodeResponse{} }
func (m *ChangeRemoteNodeResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeRemoteNodeResponse) ProtoMessage()    {}
func (*ChangeRemoteNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{16}
}
func (m *ChangeRemoteNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeRemoteNodeResponse.Unmarshal(m, b)
}
func (m *ChangeRemoteNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeRemoteNodeResponse.Marshal(b, m, deterministic)
}
func (dst *ChangeRemoteNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeRemoteNodeResponse.Merge(dst, src)
}
func (m *ChangeRemoteNodeResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeRemoteNodeResponse.Size(m)
}
func (m *ChangeRemoteNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeRemoteNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeRemoteNodeResponse proto.InternalMessageInfo

func (m *ChangeRemoteNodeResponse) GetRemote() *RemoteNode {
	if m != nil {
		return m.Remote
	}
	return nil
}

type ChangeAmazonRDSRemoteNodeRequest struct {
	// Unique Node identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique user-defined Node name.
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeAmazonRDSRemoteNodeRequest) Reset()         { *m = ChangeAmazonRDSRemoteNodeRequest{} }
func (m *ChangeAmazonRDSRemoteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeAmazonRDSRemoteNodeRequest) ProtoMessage()    {}
func (*ChangeAmazonRDSRemoteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{17}
}
func (m *ChangeAmazonRDSRemoteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeAmazonRDSRemoteNodeRequest.Unmarshal(m, b)
}
func (m *ChangeAmazonRDSRemoteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeAmazonRDSRemoteNodeRequest.Marshal(b, m, deterministic)
}
func (dst *ChangeAmazonRDSRemoteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeAmazonRDSRemoteNodeRequest.Merge(dst, src)
}
func (m *ChangeAmazonRDSRemoteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeAmazonRDSRemoteNodeRequest.Size(m)
}
func (m *ChangeAmazonRDSRemoteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeAmazonRDSRemoteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeAmazonRDSRemoteNodeRequest proto.InternalMessageInfo

func (m *ChangeAmazonRDSRemoteNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ChangeAmazonRDSRemoteNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ChangeAmazonRDSRemoteNodeResponse struct {
	AmazonRdsRemote      *AmazonRDSRemoteNode `protobuf:"bytes,1,opt,name=amazon_rds_remote,json=amazonRdsRemote,proto3" json:"amazon_rds_remote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ChangeAmazonRDSRemoteNodeResponse) Reset()         { *m = ChangeAmazonRDSRemoteNodeResponse{} }
func (m *ChangeAmazonRDSRemoteNodeResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeAmazonRDSRemoteNodeResponse) ProtoMessage()    {}
func (*ChangeAmazonRDSRemoteNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{18}
}
func (m *ChangeAmazonRDSRemoteNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeAmazonRDSRemoteNodeResponse.Unmarshal(m, b)
}
func (m *ChangeAmazonRDSRemoteNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeAmazonRDSRemoteNodeResponse.Marshal(b, m, deterministic)
}
func (dst *ChangeAmazonRDSRemoteNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeAmazonRDSRemoteNodeResponse.Merge(dst, src)
}
func (m *ChangeAmazonRDSRemoteNodeResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeAmazonRDSRemoteNodeResponse.Size(m)
}
func (m *ChangeAmazonRDSRemoteNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeAmazonRDSRemoteNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeAmazonRDSRemoteNodeResponse proto.InternalMessageInfo

func (m *ChangeAmazonRDSRemoteNodeResponse) GetAmazonRdsRemote() *AmazonRDSRemoteNode {
	if m != nil {
		return m.AmazonRdsRemote
	}
	return nil
}

type RemoveNodeRequest struct {
	// Unique Node identifier.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNodeRequest) Reset()         { *m = RemoveNodeRequest{} }
func (m *RemoveNodeRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveNodeRequest) ProtoMessage()    {}
func (*RemoveNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{19}
}
func (m *RemoveNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodeRequest.Unmarshal(m, b)
}
func (m *RemoveNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodeRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodeRequest.Merge(dst, src)
}
func (m *RemoveNodeRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveNodeRequest.Size(m)
}
func (m *RemoveNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodeRequest proto.InternalMessageInfo

func (m *RemoveNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveNodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNodeResponse) Reset()         { *m = RemoveNodeResponse{} }
func (m *RemoveNodeResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveNodeResponse) ProtoMessage()    {}
func (*RemoveNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodes_a108399da7217dd2, []int{20}
}
func (m *RemoveNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodeResponse.Unmarshal(m, b)
}
func (m *RemoveNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodeResponse.Marshal(b, m, deterministic)
}
func (dst *RemoveNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodeResponse.Merge(dst, src)
}
func (m *RemoveNodeResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveNodeResponse.Size(m)
}
func (m *RemoveNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodeResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GenericNode)(nil), "inventory.GenericNode")
	proto.RegisterType((*RemoteNode)(nil), "inventory.RemoteNode")
	proto.RegisterType((*AmazonRDSRemoteNode)(nil), "inventory.AmazonRDSRemoteNode")
	proto.RegisterType((*ListNodesRequest)(nil), "inventory.ListNodesRequest")
	proto.RegisterType((*ListNodesResponse)(nil), "inventory.ListNodesResponse")
	proto.RegisterType((*GetNodeRequest)(nil), "inventory.GetNodeRequest")
	proto.RegisterType((*GetNodeResponse)(nil), "inventory.GetNodeResponse")
	proto.RegisterType((*AddGenericNodeRequest)(nil), "inventory.AddGenericNodeRequest")
	proto.RegisterType((*AddGenericNodeResponse)(nil), "inventory.AddGenericNodeResponse")
	proto.RegisterType((*AddRemoteNodeRequest)(nil), "inventory.AddRemoteNodeRequest")
	proto.RegisterType((*AddRemoteNodeResponse)(nil), "inventory.AddRemoteNodeResponse")
	proto.RegisterType((*AddAmazonRDSRemoteNodeRequest)(nil), "inventory.AddAmazonRDSRemoteNodeRequest")
	proto.RegisterType((*AddAmazonRDSRemoteNodeResponse)(nil), "inventory.AddAmazonRDSRemoteNodeResponse")
	proto.RegisterType((*ChangeGenericNodeRequest)(nil), "inventory.ChangeGenericNodeRequest")
	proto.RegisterType((*ChangeGenericNodeResponse)(nil), "inventory.ChangeGenericNodeResponse")
	proto.RegisterType((*ChangeRemoteNodeRequest)(nil), "inventory.ChangeRemoteNodeRequest")
	proto.RegisterType((*ChangeRemoteNodeResponse)(nil), "inventory.ChangeRemoteNodeResponse")
	proto.RegisterType((*ChangeAmazonRDSRemoteNodeRequest)(nil), "inventory.ChangeAmazonRDSRemoteNodeRequest")
	proto.RegisterType((*ChangeAmazonRDSRemoteNodeResponse)(nil), "inventory.ChangeAmazonRDSRemoteNodeResponse")
	proto.RegisterType((*RemoveNodeRequest)(nil), "inventory.RemoveNodeRequest")
	proto.RegisterType((*RemoveNodeResponse)(nil), "inventory.RemoveNodeResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodesClient is the client API for Nodes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodesClient interface {
	// ListNodes returns a list of all Nodes.
	ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error)
	// GetNode returns a single Node by ID.
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error)
	// AddGenericNode adds generic Node.
	AddGenericNode(ctx context.Context, in *AddGenericNodeRequest, opts ...grpc.CallOption) (*AddGenericNodeResponse, error)
	// AddRemoteNode adds remote Node.
	AddRemoteNode(ctx context.Context, in *AddRemoteNodeRequest, opts ...grpc.CallOption) (*AddRemoteNodeResponse, error)
	// AddAmazonRDSRemoteNode adds Amazon (AWS) RDS remote Node.
	AddAmazonRDSRemoteNode(ctx context.Context, in *AddAmazonRDSRemoteNodeRequest, opts ...grpc.CallOption) (*AddAmazonRDSRemoteNodeResponse, error)
	// ChangeGenericNode changes generic Node.
	ChangeGenericNode(ctx context.Context, in *ChangeGenericNodeRequest, opts ...grpc.CallOption) (*ChangeGenericNodeResponse, error)
	// ChangeRemoteNode changes remote Node.
	ChangeRemoteNode(ctx context.Context, in *ChangeRemoteNodeRequest, opts ...grpc.CallOption) (*ChangeRemoteNodeResponse, error)
	// ChangeAmazonRDSRemoteNode changes Amazon (AWS) RDS remote Node.
	ChangeAmazonRDSRemoteNode(ctx context.Context, in *ChangeAmazonRDSRemoteNodeRequest, opts ...grpc.CallOption) (*ChangeAmazonRDSRemoteNodeResponse, error)
	// RemoveNode removes Node without any Agents and Services.
	RemoveNode(ctx context.Context, in *RemoveNodeRequest, opts ...grpc.CallOption) (*RemoveNodeResponse, error)
}

type nodesClient struct {
	cc *grpc.ClientConn
}

func NewNodesClient(cc *grpc.ClientConn) NodesClient {
	return &nodesClient{cc}
}

func (c *nodesClient) ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error) {
	out := new(ListNodesResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/ListNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error) {
	out := new(GetNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) AddGenericNode(ctx context.Context, in *AddGenericNodeRequest, opts ...grpc.CallOption) (*AddGenericNodeResponse, error) {
	out := new(AddGenericNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/AddGenericNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) AddRemoteNode(ctx context.Context, in *AddRemoteNodeRequest, opts ...grpc.CallOption) (*AddRemoteNodeResponse, error) {
	out := new(AddRemoteNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/AddRemoteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) AddAmazonRDSRemoteNode(ctx context.Context, in *AddAmazonRDSRemoteNodeRequest, opts ...grpc.CallOption) (*AddAmazonRDSRemoteNodeResponse, error) {
	out := new(AddAmazonRDSRemoteNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/AddAmazonRDSRemoteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) ChangeGenericNode(ctx context.Context, in *ChangeGenericNodeRequest, opts ...grpc.CallOption) (*ChangeGenericNodeResponse, error) {
	out := new(ChangeGenericNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/ChangeGenericNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) ChangeRemoteNode(ctx context.Context, in *ChangeRemoteNodeRequest, opts ...grpc.CallOption) (*ChangeRemoteNodeResponse, error) {
	out := new(ChangeRemoteNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/ChangeRemoteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) ChangeAmazonRDSRemoteNode(ctx context.Context, in *ChangeAmazonRDSRemoteNodeRequest, opts ...grpc.CallOption) (*ChangeAmazonRDSRemoteNodeResponse, error) {
	out := new(ChangeAmazonRDSRemoteNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/ChangeAmazonRDSRemoteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodesClient) RemoveNode(ctx context.Context, in *RemoveNodeRequest, opts ...grpc.CallOption) (*RemoveNodeResponse, error) {
	out := new(RemoveNodeResponse)
	err := c.cc.Invoke(ctx, "/inventory.Nodes/RemoveNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodesServer is the server API for Nodes service.
type NodesServer interface {
	// ListNodes returns a list of all Nodes.
	ListNodes(context.Context, *ListNodesRequest) (*ListNodesResponse, error)
	// GetNode returns a single Node by ID.
	GetNode(context.Context, *GetNodeRequest) (*GetNodeResponse, error)
	// AddGenericNode adds generic Node.
	AddGenericNode(context.Context, *AddGenericNodeRequest) (*AddGenericNodeResponse, error)
	// AddRemoteNode adds remote Node.
	AddRemoteNode(context.Context, *AddRemoteNodeRequest) (*AddRemoteNodeResponse, error)
	// AddAmazonRDSRemoteNode adds Amazon (AWS) RDS remote Node.
	AddAmazonRDSRemoteNode(context.Context, *AddAmazonRDSRemoteNodeRequest) (*AddAmazonRDSRemoteNodeResponse, error)
	// ChangeGenericNode changes generic Node.
	ChangeGenericNode(context.Context, *ChangeGenericNodeRequest) (*ChangeGenericNodeResponse, error)
	// ChangeRemoteNode changes remote Node.
	ChangeRemoteNode(context.Context, *ChangeRemoteNodeRequest) (*ChangeRemoteNodeResponse, error)
	// ChangeAmazonRDSRemoteNode changes Amazon (AWS) RDS remote Node.
	ChangeAmazonRDSRemoteNode(context.Context, *ChangeAmazonRDSRemoteNodeRequest) (*ChangeAmazonRDSRemoteNodeResponse, error)
	// RemoveNode removes Node without any Agents and Services.
	RemoveNode(context.Context, *RemoveNodeRequest) (*RemoveNodeResponse, error)
}

func RegisterNodesServer(s *grpc.Server, srv NodesServer) {
	s.RegisterService(&_Nodes_serviceDesc, srv)
}

func _Nodes_ListNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).ListNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/ListNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).ListNodes(ctx, req.(*ListNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).GetNode(ctx, req.(*GetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_AddGenericNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddGenericNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).AddGenericNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/AddGenericNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).AddGenericNode(ctx, req.(*AddGenericNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_AddRemoteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRemoteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).AddRemoteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/AddRemoteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).AddRemoteNode(ctx, req.(*AddRemoteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_AddAmazonRDSRemoteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAmazonRDSRemoteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).AddAmazonRDSRemoteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/AddAmazonRDSRemoteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).AddAmazonRDSRemoteNode(ctx, req.(*AddAmazonRDSRemoteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_ChangeGenericNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeGenericNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).ChangeGenericNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/ChangeGenericNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).ChangeGenericNode(ctx, req.(*ChangeGenericNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_ChangeRemoteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeRemoteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).ChangeRemoteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/ChangeRemoteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).ChangeRemoteNode(ctx, req.(*ChangeRemoteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_ChangeAmazonRDSRemoteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeAmazonRDSRemoteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).ChangeAmazonRDSRemoteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/ChangeAmazonRDSRemoteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).ChangeAmazonRDSRemoteNode(ctx, req.(*ChangeAmazonRDSRemoteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nodes_RemoveNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodesServer).RemoveNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Nodes/RemoveNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodesServer).RemoveNode(ctx, req.(*RemoveNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Nodes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inventory.Nodes",
	HandlerType: (*NodesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNodes",
			Handler:    _Nodes_ListNodes_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _Nodes_GetNode_Handler,
		},
		{
			MethodName: "AddGenericNode",
			Handler:    _Nodes_AddGenericNode_Handler,
		},
		{
			MethodName: "AddRemoteNode",
			Handler:    _Nodes_AddRemoteNode_Handler,
		},
		{
			MethodName: "AddAmazonRDSRemoteNode",
			Handler:    _Nodes_AddAmazonRDSRemoteNode_Handler,
		},
		{
			MethodName: "ChangeGenericNode",
			Handler:    _Nodes_ChangeGenericNode_Handler,
		},
		{
			MethodName: "ChangeRemoteNode",
			Handler:    _Nodes_ChangeRemoteNode_Handler,
		},
		{
			MethodName: "ChangeAmazonRDSRemoteNode",
			Handler:    _Nodes_ChangeAmazonRDSRemoteNode_Handler,
		},
		{
			MethodName: "RemoveNode",
			Handler:    _Nodes_RemoveNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inventory/nodes.proto",
}

func init() { proto.RegisterFile("inventory/nodes.proto", fileDescriptor_nodes_a108399da7217dd2) }

var fileDescriptor_nodes_a108399da7217dd2 = []byte{
	// 884 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xcd, 0x6e, 0xeb, 0x44,
	0x14, 0xee, 0xa4, 0x6e, 0x6e, 0x73, 0x2a, 0x7a, 0x93, 0xe1, 0x36, 0x37, 0xd7, 0x24, 0x69, 0x3a,
	0xa1, 0x55, 0xda, 0xb4, 0x71, 0x29, 0xa8, 0x8b, 0xee, 0x52, 0x10, 0x0d, 0x51, 0xcb, 0xc2, 0x65,
	0x81, 0xd8, 0x54, 0x6e, 0x3d, 0x4a, 0xad, 0x36, 0x9e, 0x10, 0xbb, 0xa9, 0x40, 0x2c, 0x10, 0x2b,
	0x16, 0x48, 0x2c, 0x78, 0x01, 0x1e, 0x80, 0x17, 0x60, 0xc7, 0x03, 0xb0, 0xe3, 0x01, 0x90, 0x10,
	0x0f, 0x82, 0x3c, 0x9e, 0xf8, 0x27, 0x1e, 0xbb, 0x69, 0xd0, 0xdd, 0x39, 0xe3, 0x73, 0xce, 0xf7,
	0x7d, 0xe7, 0x6f, 0x1c, 0xd8, 0xb0, 0xec, 0x09, 0xb5, 0x5d, 0x36, 0xfe, 0x46, 0xb3, 0x99, 0x49,
	0x9d, 0xce, 0x68, 0xcc, 0x5c, 0x86, 0x0b, 0xc1, 0xb1, 0x7a, 0x3c, 0xb0, 0xdc, 0xdb, 0x87, 0xeb,
	0xce, 0x0d, 0x1b, 0x6a, 0xc3, 0x47, 0xcb, 0xbd, 0x63, 0x8f, 0xda, 0x80, 0x1d, 0x70, 0xbb, 0x83,
	0x89, 0x71, 0x6f, 0x99, 0x86, 0xcb, 0xc6, 0x8e, 0x16, 0x3c, 0xfa, 0x21, 0xd4, 0xea, 0x80, 0xb1,
	0xc1, 0x3d, 0xd5, 0x8c, 0x91, 0xa5, 0x19, 0xb6, 0xcd, 0x5c, 0xc3, 0xb5, 0x98, 0x2d, 0x00, 0xc8,
	0x05, 0xac, 0x9d, 0x51, 0x9b, 0x8e, 0xad, 0x9b, 0xcf, 0x99, 0x49, 0xf1, 0x3a, 0xe4, 0x2c, 0xb3,
	0x82, 0x1a, 0xa8, 0x55, 0xd0, 0x73, 0x96, 0x89, 0x31, 0x28, 0xb6, 0x31, 0xa4, 0x95, 0x1c, 0x3f,
	0xe1, 0xcf, 0x58, 0x85, 0xd5, 0x5b, 0xe6, 0xb8, 0xfc, 0x7c, 0x99, 0x9f, 0x07, 0xbf, 0xc9, 0x31,
	0x80, 0x4e, 0x87, 0xcc, 0xa5, 0xf3, 0x46, 0xeb, 0x2b, 0xab, 0xcb, 0x45, 0x85, 0x0c, 0xe1, 0xdd,
	0xee, 0xd0, 0xf8, 0x96, 0xd9, 0xfa, 0x27, 0x97, 0xcf, 0x0b, 0x90, 0x45, 0x07, 0x97, 0x21, 0x3f,
	0xa6, 0x03, 0x8b, 0xd9, 0x15, 0x85, 0xbf, 0x11, 0xbf, 0x08, 0x86, 0xe2, 0xb9, 0xe5, 0xb8, 0x1e,
	0x86, 0xa3, 0xd3, 0xaf, 0x1f, 0xa8, 0xe3, 0x92, 0x3f, 0x10, 0x94, 0x22, 0x87, 0xce, 0x88, 0xd9,
	0x0e, 0xc5, 0x87, 0xf0, 0x62, 0xe0, 0xe7, 0xa7, 0x82, 0x1a, 0xcb, 0xad, 0xb5, 0xa3, 0x72, 0x27,
	0x28, 0x49, 0x27, 0x92, 0x39, 0x7d, 0x6a, 0x86, 0x0f, 0x3c, 0x4c, 0x4f, 0x41, 0x45, 0xe1, 0x0e,
	0x1b, 0x11, 0x87, 0x50, 0x9a, 0x2e, 0x8c, 0x70, 0x1f, 0x4a, 0x06, 0x57, 0x7e, 0x35, 0x36, 0x9d,
	0x2b, 0xe1, 0xb9, 0xc2, 0x3d, 0xeb, 0x11, 0x4f, 0x49, 0x76, 0xf4, 0x97, 0xbe, 0xa3, 0x6e, 0x3a,
	0xfe, 0x21, 0x69, 0xc1, 0xfa, 0x19, 0xe5, 0x02, 0x84, 0x28, 0x5c, 0x0e, 0x13, 0x78, 0x9a, 0xff,
	0xe7, 0xef, 0xcd, 0xdc, 0x97, 0xc8, 0x4b, 0x24, 0xf9, 0x13, 0xc1, 0xcb, 0xc0, 0x54, 0x48, 0x3d,
	0x8a, 0x4a, 0x45, 0xe9, 0x52, 0x7b, 0x4b, 0xa1, 0x58, 0x2d, 0x22, 0x16, 0xa5, 0x8a, 0xed, 0x2d,
	0x05, 0x72, 0xcf, 0xe5, 0x72, 0xd1, 0xd3, 0x72, 0x7b, 0x4b, 0x09, 0xc1, 0xa7, 0x79, 0x50, 0xbc,
	0x69, 0x21, 0x57, 0xb0, 0xd1, 0x35, 0xcd, 0x68, 0x39, 0x84, 0xfe, 0xd9, 0x06, 0x52, 0xa3, 0x0d,
	0x14, 0x64, 0xe4, 0xe9, 0xbe, 0xee, 0x43, 0x79, 0x16, 0x40, 0xd6, 0x20, 0x68, 0x8e, 0x06, 0x21,
	0x3d, 0x78, 0xd5, 0x35, 0xcd, 0x48, 0x1d, 0x9f, 0xcf, 0x55, 0x4c, 0xcd, 0xa7, 0x5c, 0x76, 0x34,
	0x92, 0x20, 0x15, 0xf6, 0x20, 0xca, 0x28, 0xcb, 0xb4, 0x28, 0xe4, 0x67, 0x04, 0xb5, 0xae, 0x69,
	0xca, 0x7a, 0x6c, 0x81, 0x3c, 0x92, 0xd9, 0x3c, 0x06, 0xef, 0xc3, 0xc1, 0xac, 0xc7, 0x07, 0x33,
	0xb0, 0x98, 0x0e, 0xe8, 0x3d, 0xd4, 0xd3, 0x08, 0x09, 0x89, 0xd2, 0xb9, 0x41, 0xf3, 0x34, 0x52,
	0x72, 0x6e, 0xbe, 0x80, 0xca, 0xc7, 0xb7, 0x86, 0x3d, 0xa0, 0x92, 0x0e, 0x4a, 0x99, 0xa0, 0x39,
	0xaa, 0x73, 0x01, 0x6f, 0x24, 0x51, 0x17, 0x6e, 0x9b, 0x4b, 0x78, 0xed, 0x87, 0x4b, 0x56, 0x67,
	0x71, 0x8e, 0x9f, 0x4d, 0x95, 0xff, 0xff, 0x26, 0xba, 0x86, 0x86, 0x1f, 0x2a, 0xa3, 0x8d, 0x16,
	0x26, 0xda, 0x57, 0x56, 0x95, 0xe2, 0x0a, 0x61, 0xb0, 0x95, 0x81, 0xf1, 0x16, 0x3a, 0xa3, 0x0d,
	0x25, 0xef, 0x69, 0x32, 0x8f, 0x0a, 0xf2, 0x0a, 0x70, 0xd4, 0xd8, 0xa7, 0x73, 0xf4, 0x7b, 0x01,
	0x56, 0xf8, 0x9d, 0x82, 0xef, 0xa0, 0x10, 0x5c, 0x30, 0xf8, 0xbd, 0x08, 0x95, 0xd9, 0xbb, 0x48,
	0xad, 0xca, 0x5f, 0xfa, 0x11, 0x49, 0xf3, 0x87, 0xbf, 0xfe, 0xfd, 0x25, 0x57, 0x23, 0x15, 0x6d,
	0x72, 0xa8, 0x85, 0xdf, 0x0d, 0xdc, 0x48, 0xf3, 0xcc, 0x4f, 0xd0, 0x1e, 0x36, 0xe1, 0x85, 0x58,
	0xf0, 0xf8, 0x4d, 0xac, 0xb5, 0xa2, 0xf7, 0x83, 0xaa, 0xca, 0x5e, 0x09, 0x18, 0xc2, 0x61, 0xaa,
	0xe4, 0xb5, 0x0c, 0xe6, 0x8c, 0x72, 0x94, 0xef, 0x11, 0xac, 0xc7, 0x17, 0x23, 0x6e, 0x44, 0x73,
	0x2c, 0x5b, 0xca, 0xea, 0x56, 0x86, 0x85, 0xc0, 0xde, 0xe5, 0xd8, 0x4d, 0x52, 0x97, 0x61, 0x87,
	0x3e, 0x1e, 0x85, 0xef, 0xe0, 0x9d, 0xd8, 0x12, 0xc4, 0x9b, 0xf1, 0xf0, 0x89, 0x2e, 0x54, 0x1b,
	0xe9, 0x06, 0x02, 0xbe, 0xc5, 0xe1, 0x09, 0xa9, 0xa5, 0xc0, 0xfb, 0x2e, 0x1e, 0xfa, 0xaf, 0x88,
	0xdf, 0x0c, 0xb2, 0x8f, 0x97, 0x56, 0x1c, 0x26, 0x7d, 0x2c, 0xd4, 0xdd, 0x39, 0x2c, 0x05, 0xb3,
	0x0f, 0x38, 0xb3, 0x36, 0xd9, 0x49, 0x61, 0x36, 0xe3, 0xeb, 0x51, 0xfc, 0x09, 0x41, 0x29, 0xb1,
	0x88, 0x70, 0x33, 0x82, 0x99, 0xb6, 0xfc, 0xd4, 0xf7, 0xb3, 0x8d, 0x04, 0xa7, 0x7d, 0xce, 0x69,
	0x87, 0x6c, 0xc9, 0x38, 0xc5, 0xdc, 0x3c, 0x3a, 0x3f, 0x22, 0x28, 0xce, 0xee, 0x1c, 0x4c, 0x12,
	0x40, 0xc9, 0x2c, 0x35, 0x33, 0x6d, 0x04, 0x97, 0x36, 0xe7, 0xb2, 0x4d, 0x1a, 0xe9, 0x5c, 0xc2,
	0xcc, 0xfc, 0x86, 0xa6, 0x2b, 0x5a, 0x56, 0xbf, 0x76, 0x02, 0x2f, 0xa3, 0x84, 0xfb, 0xf3, 0x19,
	0x0b, 0x96, 0x1f, 0x71, 0x96, 0x1d, 0xb2, 0x9b, 0xce, 0x52, 0x52, 0xc8, 0x91, 0xff, 0x71, 0xed,
	0xef, 0x17, 0x5c, 0x9d, 0x59, 0xc7, 0xb1, 0x1d, 0xa5, 0xd6, 0x52, 0xde, 0x0a, 0x02, 0xdb, 0x9c,
	0xc0, 0x26, 0x51, 0x65, 0x04, 0x7c, 0xfb, 0x13, 0xb4, 0x77, 0xba, 0xf6, 0x55, 0xf8, 0x07, 0xe4,
	0x3a, 0xcf, 0xff, 0x31, 0x7c, 0xf8, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x76, 0x9d, 0x0e,
	0xab, 0x0c, 0x00, 0x00,
}
